# Tomcat
server:
    tomcat:
        uri-encoding: UTF-8
        max-threads: 1000
        min-spare-threads: 30
    port: 8080
    servlet:
      context-path: /sec

# mysql
spring:
    profiles:
      active: dev
    # 指定静态资源的路径
    resources:
      static-locations: classpath:/,classpath:/templates/,classpath:/static/,classpath:/css/,classpath:/font/,classpath:/img/,classpath:/common/
    thymeleaf:
      cache: false
      prefix: classpath:/templates/
      suffix: .html
      mode: HTML5
      check-template: true
      check-template-location: true
      encoding: utf-8
      servlet:
        content-type: text/html; charset=utf-8
      enabled: true
    devtools: 
      restart:
        enabled: true
    redis:
      database: 1 #索引（默认为0）
      host: 127.0.0.1 #地址
      port: 6379 #端口号
      password: 123456 #连接密码（默认空）
      jedis:
        pool:
          max-idle: 8 #连接池中的最大空闲连接
          min-idle: 0 #连接池中的最小空闲连接
          max-active: 8 #连接池最大连接数（使用负值表示没有限制）
          max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
      #sentinel:
        #master: mymaster # 哨兵监听的Redis server的名称
        #nodes:
        #127.0.0.1:26379,127.0.0.1:26479,127.0.0.1:26579 #哨兵的配置列表
      timeout: 2000 #连接超时时间（毫秒）


logging:
  #配置日志文件路径
  level:
    com.sec.demo: info #不同目录下的日志可配置不同级别
    org.springfromework.web: warn
    org.hibernate: error
  #采用相对路径方式将日志文件输出到【log\myspringboot.log】
  file: log\myspringboot.log
  
   
#这个插件是mybatis的分页查询
pagehelper:
   helperDialect: mysql
   reasonable: true
   supportMethodsArguments: true
   params: count=countSql
